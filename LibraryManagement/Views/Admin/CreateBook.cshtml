@model LibraryManagement.Models.Book

@{
    ViewBag.Title = "Create Book";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .custom-blue-btn {
        background-color: #007bff;
        border-color: #007bff;
        color: white;
    }

        .custom-blue-btn:hover,
        .custom-blue-btn:focus,
        .custom-blue-btn:active {
            background-color: #0056b3;
            border-color: #0056b3;
        }
</style>



<h2>Add a book to the system</h2>

<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm("CreateBook", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Enter book information</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- <div class="form-group">
                    @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.IsAvailable)
                        @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                    </div>
                </div>-->

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PdfUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PdfUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PdfUrl, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn custom-blue-btn">Create</button>
                    </div>
                </div>


            </div>
        }
    </div>



    <div class="col-md-4">
        <img src="~/Content/Images/Banner.jpg" alt="Book Cover" style="width: auto; height: 700px;" />
    </div>

</div>


<div>
    @Html.ActionLink("Back to List", "AdminBook", "Admin")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
