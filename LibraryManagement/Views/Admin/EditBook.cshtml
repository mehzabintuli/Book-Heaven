@model LibraryManagement.Models.book

@{
    ViewBag.Title = "Edit Book";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container-fluid">
    <h2>Edit Book</h2>

    @using (Html.BeginForm("EditBook", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-9">
                <div class="form-horizontal">
                    <h4>Book</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Author_Id, "Author", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Author_Id, (IEnumerable<SelectListItem>)ViewBag.AuthorList, "Select an Author", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Author_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Available, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.Available)
                            @Html.ValidationMessageFor(model => model.Available, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cover_Image, "Cover Image", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" name="CoverImage" class="form-control" />
                            <input type="text" value="@Model.Cover_Image" class="form-control" hidden />
                            @Html.ValidationMessageFor(model => model.Cover_Image, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PDF_Link, "PDF File", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" name="PDFFile" class="form-control" />
                            @Html.ValidationMessageFor(model => model.PDF_Link, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Summary, new { @class = "form-control", rows = 5 })
                            @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>

                </div>
            </div>

            <div class="col-md-3 text-center">
                <img src="@Model.Cover_Image" alt="Book Image" class="img-fluid" style="max-width: 100%; height: auto;" />
            </div>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to List", "AdminBook", "Admin")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    .container-fluid {
        max-width: 100% !important;
        padding: 20px;
    }
</style>
